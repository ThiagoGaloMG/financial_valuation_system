# backend/render.yaml

# Versão do blueprint do Render
apiVersion: services.render.com/v1alpha1
kind: Blueprint

# Nome do blueprint
name: financial-valuation-system

# Serviços definidos neste blueprint (backend e frontend)
services:
  # Configuração para o serviço de backend (API Flask)
  - type: web # Tipo de serviço: web server
    name: financial-valuation-backend # Nome do serviço no Render
    env: python # Ambiente: Python
    buildCommand: "pip install -r requirements.txt" # Comando para instalar dependências
    startCommand: "gunicorn -w 4 --threads 2 -b 0.0.0.0:$PORT main:app" # Comando para iniciar o servidor Gunicorn
    # Para usar o Dockerfile em vez do buildCommand/startCommand:
    # dockerfilePath: Dockerfile
    # healthCheckPath: /api/financial/health # Caminho para o health check da API
    autoDeploy: true # Habilitar deploy automático para cada push no Git
    plan: starter # Plano de serviço (starter, standard, etc.)
    # Variáveis de ambiente (exemplo, adicione sua SECRET_KEY ou outras aqui)
    envVars:
      - key: PYTHONUNBUFFERED # Garante que os logs do Python apareçam em tempo real
        value: "1"
      # - key: SECRET_KEY
      #   value: "sua_secret_key_segura_aqui" # Use uma chave forte e secreta!
      - key: FLASK_DEBUG
        value: "False" # Sempre False em produção

    # Repositório Git (Render detecta automaticamente se você usar "Sync your Git" para o Blueprint)
    # repo: https://github.com/seu-usuario/seu-repositorio.git # Exemplo, Render preencherá
    # branch: main # Branch para deploy

  # Configuração para o serviço de frontend (Aplicação React)
  - type: web # Tipo de serviço: web server
    name: financial-valuation-frontend # Nome do serviço no Render
    env: static # Ambiente: Servidor de arquivos estáticos
    buildCommand: "npm install && npm run build" # Comandos para instalar dependências e construir o projeto React
    staticPublishPath: dist # Diretório onde os arquivos de build do React serão servidos
    autoDeploy: true # Habilitar deploy automático
    plan: starter # Plano de serviço
    # Não há necessidade de health check para static sites.
    # repo: https://github.com/seu-usuario/seu-repositorio.git # Exemplo, Render preencherá
    # branch: main # Branch para deploy

